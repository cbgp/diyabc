= Indications sur l'emplacement des parties techniques du développement
  de l'interface

== Les tests
    Ils sont dans le fichier unittest.py. J'utilise le module unittest.
    
== Les graphiques
    J'utilise la librairie Qwt pour dessiner les graphiques. On trouve
    des exemples dans python_interface/analysis/drawPCAAnalysisResul.py et dans 
    python_interface/analysis/drawComparisonAnalysisResult.py . 
    La structure du code est toujours plus ou moins la même : 
    - instanciation et paramétrage d'un QwtPlot
    - instanciation d'une légende
    - ajout d'un ou plusieurs QwtPlotCurve dans le QwtPlot
    - ajout éventuel d'une grille ou d'un zoomer
    - insertion du QwtPlot dans la GUI

== La documentation interne
    L'unique exemple est à la fin du fichier diyabc.py dans la surcharge
    de la méthode event()
    La technique utilisée est la suivante :
    Dans la classe principale (Diyabc) j'intercepte tous les événements. Si un
    d'entre eux est de type 'clic droit' et qu'il est effectué au dessus d'un Label,
    j'affiche la documentation (aide) à laquelle j'accède à partir du nom de l'objet
    cliqué.

== Lancement des exécutables
    Les exemples sont dans le fichier project.py .
    J'utilise des QThreads pour lancer les exécutables sans bloquer la GUI. Par projet, on peut 
    lancer un thread de génération de reftable et un thread d'analyse en même temps au maximum.
    La méthode run() du thread :
    - détermination des options de lancement de l'exécutable
    - lancement en arrière plan
    - boucle sur la lecture du fichier de progression
    - si on a progressé, envoi d'un signal pour mettre à jour la GUI
    - si le programme s'arrête avant que la progression n'indique 100%, 
      envoi d'un signal pour témoigner graphiquement de l'erreur 
    
== ajout d'une serie d'objets graphiques (comme les textes de scenario)
    fichier : setHistoricalModel.py
    méthodes addSc, rmSc, addParameter...

== manipulation de tableau
    fichier : setGenData.py
    methode : createWidget, addRow

== inclusion d'ui dans une autre
    instanciation de l'ui conteneur, puis ui.objet.addWidget(uicontenue)

    f = Qframe()
    uif = Ui_Frame()
    uif.setupUi(f)

    frcontenue = QFrame()
    uic = Ui_FrameContenue()
    uic.setupUi(frcontenue)
    uif.tab6.addWidget(frcontenue)
