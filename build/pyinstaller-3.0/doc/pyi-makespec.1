.\" Man page generated from reStructuredText.
.
.TH PYI-MAKESPEC 1 "" "PyInstaller 3.0.dev8+f1a8933.mod" ""
.SH NAME
pyi-makespec \- Create a spec file for your PyInstaller project
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.\" disable justification (adjust text to left margin only)
.ad l
.SH SYNOPSIS
.sp
\fBpyi\-makespec\fP <options> SCRIPT [SCRIPT ...]
.SH DESCRIPTION
.sp
The spec file is the description of what you want \fIPyInstaller\fP to do
with your program. \fBpyi\-makespec\fP is a simple wizard to create spec
files that cover basic usages:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
py\-Makespec [\-\-onefile] yourprogram.py
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
By default, \fBpyi\-makespec\fP generates a spec file that tells
\fIPyInstaller\fP to create a distribution directory contains the main
executable and the dynamic libraries. The option \fB\-\-onefile\fP
specifies that you want PyInstaller to build a single file with
everything inside.
.sp
In most cases the specfile generated by \fBpyi\-makespec\fP is all you
need. If not, see \fIWhen things go wrong\fP in the manual and be sure to
read the introduction to \fISpec Files\fP\&.
.SH OPTIONS
.INDENT 0.0
.TP
.B \-h\fP,\fB  \-\-help
show this help message and exit
.TP
.BI \-\-log\-level\fB= LOGLEVEL
Amount of detail in build\-time console messages
(default: INFO, choose one of DEBUG, INFO, WARN,
ERROR, CRITICAL)
.UNINDENT
.SS What to generate
.INDENT 0.0
.TP
.B \-F\fP,\fB  \-\-onefile
Create a one\-file bundled executable.
.TP
.B \-D\fP,\fB  \-\-onedir
Create a one\-folder bundle containing an executable
(default)
.TP
.BI \-\-specpath\fB= DIR
Folder to store the generated spec file (default:
current directory)
.TP
.BI \-n \ NAME\fP,\fB \ \-\-name\fB= NAME
Name to assign to the bundled app and spec file
(default: first script\(aqs basename)
.UNINDENT
.SS What to bundle, where to search
.INDENT 0.0
.TP
.BI \-p \ DIR\fP,\fB \ \-\-paths\fB= DIR
A path to search for imports (like using PYTHONPATH).
Multiple paths are allowed, separated by \(aq:\(aq, or use
this option multiple times
.TP
.BI \-\-hidden\-import\fB= MODULENAME
Name an import not visible in the code of the
script(s). This option can be used multiple times.
.TP
.BI \-\-additional\-hooks\-dir\fB= HOOKSPATH
An additional path to search for hooks. This option
can be used multiple times.
.TP
.BI \-\-runtime\-hook\fB= RUNTIME_HOOKS
Path to a custom runtime hook file. A runtime hook is
code that is bundled with the executable and is
executed before any other code or module to set up
special features of the runtime environment. This
option can be used multiple times.
.TP
.BI \-\-exclude\-module\fB= EXCLUDES
Optional module or package (his Python names,not path
names) that will be ignored (as thoughit was not
found).This option can be used multiple times.
.TP
.BI \-\-key\fB= KEY
The key used to encrypt Python bytecode.
.UNINDENT
.SS How to generate
.INDENT 0.0
.TP
.B \-d\fP,\fB  \-\-debug
Tell the bootloader to issue progress messages while
initializing and starting the bundled app. Used to
diagnose problems with missing imports.
.TP
.B \-s\fP,\fB  \-\-strip
Apply a symbol\-table strip to the executable and
shared libs (not recommended for Windows)
.TP
.B \-\-noupx
Do not use UPX even if it is available (works
differently between Windows and *nix)
.UNINDENT
.SS Windows and Mac OS X specific options
.INDENT 0.0
.TP
.B \-c\fP,\fB  \-\-console\fP,\fB  \-\-nowindowed
Open a console window for standard i/o (default)
.TP
.B \-w\fP,\fB  \-\-windowed\fP,\fB  \-\-noconsole
Windows and Mac OS X: do not provide a console window
for standard i/o. On Mac OS X this also triggers
building an OS X .app bundle.This option is ignored in
*NIX systems.
.TP
.BI \-i \ <FILE.ico or FILE.exe,ID or FILE.icns>\fP,\fB \ \-\-icon\fB= <FILE.ico or FILE.exe,ID or FILE.icns>
FILE.ico: apply that icon to a Windows executable.
FILE.exe,ID, extract the icon with ID from an exe.
FILE.icns: apply the icon to the .app bundle on Mac OS
X
.UNINDENT
.SS Windows specific options
.INDENT 0.0
.TP
.BI \-\-version\-file\fB= FILE
add a version resource from FILE to the exe
.TP
.BI \-m \ <FILE or XML>\fP,\fB \ \-\-manifest\fB= <FILE or XML>
add manifest FILE or XML to the exe
.TP
.BI \-r \ <FILE[,TYPE[,NAME[,LANGUAGE]]]>\fP,\fB \ \-\-resource\fB= <FILE[,TYPE[,NAME[,LANGUAGE]]]>
Add or update a resource of the given type, name and
language from FILE to a Windows executable. FILE can
be a data file or an exe/dll. For data files, at least
TYPE and NAME must be specified. LANGUAGE defaults to
0 or may be specified as wildcard * to update all
resources of the given TYPE and NAME. For exe/dll
files, all resources from FILE will be added/updated
to the final executable if TYPE, NAME and LANGUAGE are
omitted or specified as wildcard *.This option can be
used multiple times.
.TP
.B \-\-uac\-admin
Using this option creates a Manifest which will
request elevation upon application restart.
.TP
.B \-\-uac\-uiaccess
Using this option allows an elevated application to
work with Remote Desktop.
.UNINDENT
.SS Windows Side\-by\-side Assembly searching options (advanced)
.INDENT 0.0
.TP
.B \-\-win\-private\-assemblies
Any Shared Assemblies bundled into the application
will be changed into Private Assemblies. This means
the exact versions of these assemblies will always be
used, and any newer versions installed on user
machines at the system level will be ignored.
.TP
.B \-\-win\-no\-prefer\-redirects
While searching for Shared or Private Assemblies to
bundle into the application, PyInstaller will prefer
not to follow policies that redirect to newer
versions, and will try to bundle the exact versions of
the assembly.
.UNINDENT
.SS Mac OS X specific options
.INDENT 0.0
.TP
.BI \-\-osx\-bundle\-identifier\fB= BUNDLE_IDENTIFIER
Mac OS X .app bundle identifier is used as the default
unique program name for code signing purposes. The
usual form is a hierarchical name in reverse DNS
notation. For example:
com.mycompany.department.appname (default: first
script\(aqs basename)
.UNINDENT
.SH ENVIRONMENT VARIABLES
.TS
center;
|l|l|.
_
T{
PYINSTALLER_CONFIG_DIR
T}	T{
This changes the directory where PyInstaller caches some
files. The default location for this is operating system
dependent, but is typically a subdirectory of the home
directory.
T}
_
.TE
.SH SEE ALSO
.sp
\fBpyi\-build\fP(1), The PyInstaller Manual, \fBpyinstaller\fP(1)
.sp
Project Homepage \fI\%http://www.pyinstaller.org\fP
.SH AUTHOR
Giovanni Bajo
.SH COPYRIGHT
2005-2011 by Giovanni Bajo, based on previous work under copyright 2002 McMillan Enterprises, Inc.
.\" Generated by docutils manpage writer.
.
